name: GitHub CI

on:
  push:
    branches: [ 'main', 'release/*' ]
    tags:    [ 'v*' ]
  workflow_dispatch:
    inputs:
      targets:
        description: '要构建的平台，逗号分隔（例: linux32,macos,windows64）；不填或 all 则全跑'
        required: false
        default: 'all'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.id }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - id: linux32
            os: ubuntu-latest
            docker: multiarch/alpine:x86-latest-stable
            artifact: stairspeedtest_reborn_linux32
          - id: linux64
            os: ubuntu-latest
            docker: multiarch/alpine:amd64-latest-stable
            artifact: stairspeedtest_reborn_linux64
          - id: macos
            os: macos-latest
            artifact: stairspeedtest_reborn_darwin64
          - id: windows64
            os: windows-latest
            msystem: MINGW64
            artifact: stairspeedtest_reborn_win64
          - id: windows32
            os: windows-latest
            msystem: MINGW32
            artifact: stairspeedtest_reborn_win32

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Skip if not in selected targets
        if: >
          github.event_name == 'workflow_dispatch' &&
          github.event.inputs.targets != 'all' &&
          !contains(github.event.inputs.targets, matrix.id)
        run: |
          echo "Skipping build for ${{ matrix.id }}"
          exit 0

      - name: Setup MSYS2 (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.msystem }}
          install: >
            base-devel git mingw-w64-${{ matrix.msystem }}-{gcc,cmake,libevent,pcre2,freetype,
            libpng,bzip2,openssl,libsodium,c-ares,boost,libmariadbclient} unzip p7zip

      - name: Add commit id into version
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: |
          SHA=$(git rev-parse --short HEAD)
          # macOS 下 sed 要加 -e，否则 Linux runner 下直接用 -i
          SED_OPTS="-i${{ matrix.os == 'macos-latest' && 'e' || '' }}"
          sed $SED_OPTS 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h

      - name: Build
        shell: bash
        run: |
          case "${{ matrix.id }}" in
            linux32|linux64)
              docker run \
                -v "$GITHUB_WORKSPACE":/root/workdir \
                -e TRAVIS_BRANCH=action \
                -e TRAVIS_TAG=action \
                ${{ matrix.docker }} \
                /bin/sh -c "apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh"
              ;;
            macos)
              bash scripts/build.macos.release.sh
              bash scripts/build.macos.clients.sh
              mv base stairspeedtest
              ;;
            windows32|windows64)
              # 用 msys2 提供的 bash
              bash -lc "bash scripts/build.windows.maindeps.sh &&
                        bash scripts/build.windows.clients.sh &&
                        bash scripts/build.windows.release.sh &&
                        mv \$USERPROFILE/clients/built/websocketd.exe base/tools/gui/ &&
                        mv \$USERPROFILE/clients/built base/tools/clients &&
                        mv base stairspeedtest"
              ;;
          esac

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: stairspeedtest/

      - name: Package Release
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          tar czf "${{ matrix.artifact }}.tar.gz" stairspeedtest

      - name: Draft Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact }}.tar.gz
          draft: true
