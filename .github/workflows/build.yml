name: GitHub CI

on:
  workflow_dispatch:
    inputs:
      targets:
        description: '要构建的平台，逗号分隔（例: linux32,macos,windows64），不填或 all 则全跑'
        required: false
        default: 'all'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.id }}
    runs-on: ${{ matrix.os }}
    if: >-
      github.event_name == 'push' ||
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.targets == 'all' ||
        contains(github.event.inputs.targets, matrix.id)))
    strategy:
      matrix:
        include:
          - id: linux32
            os: ubuntu-latest
            docker: multiarch/alpine:x86-latest-stable
            artifact: stairspeedtest_reborn_linux32
          - id: linux64
            os: ubuntu-latest
            docker: multiarch/alpine:amd64-latest-stable
            artifact: stairspeedtest_reborn_linux64
          - id: macos
            os: macos-latest
            artifact: stairspeedtest_reborn_darwin64
          - id: windows64
            os: windows-latest
            msystem: MINGW64
            artifact: stairspeedtest_reborn_win64
          - id: windows32
            os: windows-latest
            msystem: MINGW32
            artifact: stairspeedtest_reborn_win32

    defaults:
      run:
        # Windows 下用 msys2 shell，其它用默认
        shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}

    steps:
      - uses: actions/checkout@v2

      - name: Add commit id into version
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          SHA=$(git rev-parse --short HEAD)
          sed -i${{ matrix.os == 'macos-latest' && 'e' || '' }} \
            's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h

      # Windows 专属：先装 msys2 工具链
      - name: Setup MSYS2 (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.msystem }}
          install: base-devel git mingw-w64-${{ matrix.msystem }}-{gcc,cmake,libevent,pcre2,freetype,libpng,bzip2,openssl,libsodium,c-ares,boost,libmariadbclient} unzip p7zip

      - name: Build
        run: |
          if [ "${{ matrix.id }}" == "linux32" ] || [ "${{ matrix.id }}" == "linux64" ]; then
            docker run \
              -v $GITHUB_WORKSPACE:/root/workdir \
              -e TRAVIS_BRANCH=action \
              -e TRAVIS_TAG=action \
              ${{ matrix.docker }} \
              /bin/sh -c "apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh"
          elif [ "${{ matrix.id }}" == "macos" ]; then
            bash scripts/build.macos.release.sh
            bash scripts/build.macos.clients.sh
            mv base stairspeedtest
          else
            # windows32 / windows64
            bash scripts/build.windows.maindeps.sh
            bash scripts/build.windows.clients.sh
            bash scripts/build.windows.release.sh
            mv $USERPROFILE/clients/built/websocketd.exe base/tools/gui/
            mv $USERPROFILE/clients/built base/tools/clients
            mv base stairspeedtest
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: stairspeedtest/

      - name: Package Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          tar czf ${{ matrix.artifact }}.tar.gz stairspeedtest

      - name: Draft Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact }}.tar.gz
          draft: true
